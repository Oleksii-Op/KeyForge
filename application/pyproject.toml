[tool.poetry]
name = "crypto-hash-server"
version = "0.1.0"
description = "An application for hash/key generation"
authors = ["Oleksii-Op <oleksii.oprish@gmail.com>"]
readme = "README.md"
license = "GNU GPL v2"
packages = [{include = "crypto_hash_server"}]

[tool.poetry.dependencies]
python = "3.12.7"
cryptography = "^44.0.2"
fastapi = {extras = ["standard"], version = "^0.115.11"}
pydantic-settings = "^2.8.1"
pwdlib = {extras = ["argon2", "bcrypt"], version = "^0.2.1"}
opentelemetry-api = "^1.30.0"
opentelemetry-sdk = "^1.30.0"
opentelemetry-instrumentation-fastapi = "^0.51b0"
opentelemetry-exporter-otlp = "^1.30.0"
prometheus-fastapi-instrumentator = "^7.0.2"
opentelemetry-instrumentation-logging = "^0.51b0"
pytest-xdist = {extras = ["psutil"], version = "^3.6.1"}

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
pytest = "^8.3.5"
pytest-asyncio = "^0.25.3"
pytest-cov = "^6.0.0"
mkdocs-material = "^9.6.7"
ruff = "^0.9.10"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini.options]
filterwarnign = ["ignore::DeprecationWarning"]

[tool.coverage.run]
omit = [
    "core/config.py",
    "core/schemas.py",
    "response_docs/*",
    "tests/*",
    "main.py",
    "__init__.py",
    "utils/healthcheck.py",
    "utils/utils.py"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "tests",
    "response_docs",
    "docs"
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"